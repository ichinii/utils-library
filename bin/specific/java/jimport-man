#!/usr/bin/env python3

import sys
import os
import glob
import fnmatch
import re

usage="Usage:\tjimport-man <file>\n\tjimport-man"

classes=list() # ['Main', 'Screen']
files=list() # ['core/Main.java', 'core/Screen.java']
javafiles=list() # ['core.Main', 'core.Screen']

def init():
	for root, dirnames, filenames in os.walk('.'): # define files
		for filename in fnmatch.filter(filenames, '*.java'):
			files.append(root +"/" + filename)

	for f in files: # define classes & javafiles
		classes.append(re.sub("\.java", "", re.sub(".*\/", "", f)))
		javafiles.append(re.sub("\.java", "", re.sub("/", ".", f))[2:])

def classToJavafile(classname):
	return javafiles[classes.index(classname)]

def importLineToClassname(line):
	
	if "//" in line:
		line = line[:line.find("//")]
	if "/*" in line: # not even needed because lines with * are ignored
		line = line[:line.find("/*")]
	
	return re.sub(".*\.", "", line.strip())[:-1]

def getFixedStaticImport(line):
	return line

def getFixedNormalImport(line):
	return "import " + classToJavafile(importLineToClassname(line)) + ";\n"

def getFixedLine(line):
	if not "*" in line:
		if line.startswith("import ") and not line.startswith("import java"):
			if line.startswith("import static "):
				return getFixedStaticImport(line) # Falls es ein static import is
			else:
				return getFixedNormalImport(line) # Falls es ein normaler Klassen import ist
	return line

def fixFile(filename):
	try:
		f=open(filename, "r")
	except:
		print("Can't open file " + filename)
		sys.exit()

	lines=f.readlines()

	try:
		f=open(filename, "w")
	except:
		print("Can't open file " + filename)
		sys.exit()

	try:
		f.writelines([getFixedLine(line) for line in lines])
	except:
		print("error in " + filename)
		f.writelines(lines)

def fixProject():
	for f in files:
		fixFile(f)

if os.path.isdir(os.getcwd() + "/src"):
	os.chdir("src")
else:
	print("You are not in root")
	sys.exit()
init()

if len(sys.argv) == 1:
	fixProject()
elif len(sys.argv) == 2:
	fixFile(sys.argv[1])
else:
	print(usage)
